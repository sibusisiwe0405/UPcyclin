{"mappings":";AACA;;;;;AAKA;;;;;;;;;AAQA;;;;;;AAKA;;;;;;;AAMA;;;;;AAIA;;;;;;;;;;;;;;AAaA;;;;AAGA;;;;;;AAKA;;;;;;;;;AAQA;;;;AAGA;;;;;;;;AAOA;;;;;AAIA;;;;;AAIA;;;;;AAKA;;;;AAGA;EACE;;;;;AAIF;EACE;;;;;;;;;;;;AAaA;EACE;;;;EAGA;;;;;;;AAMJ;EACE;;;;;EAIA;;;;;EAIA;;;;;;;;;;;EAUA;;;;;;;;;EAQA;;;;;;EAKA;;;;EAGA;;;;EAGA;;;;EAGA;;;;EAGA;;;;EAGA;;;;EAGA;;;;;;EAKA;;;;EAGA;;;;EAGA;;;;;AAKF;;;;;;;;;AAQA;;;;AAGA;;;;;;;AAOA;EACE;;;;;;;;AASF;;;;;;AAOA;;;;AAGA;;;;AAKA;;;;AAIA;;;;;;;;;;;;AAWA;;;;;;;;;;AC5OA;;;;AAMA;;;;AASA;;;;;;;;;;;AAaA;;;;;;AAWA;;;;;AAQA;;;;;;;;AChDA;;;;;AAEA;EACE;;;;;;;EAOA;;;;;;;;;;;EAWA;;;;;;EAMA;;;;;;;;;;EAaA","sources":["src/css/nav.css","node_modules/splitting/dist/splitting.css","node_modules/splitting/dist/splitting-cells.css"],"sourcesContent":["@import url(\"https://fonts.google.com/specimen/Carter+One\");\nbody {\n  padding-top: 50px;\n  font-family: CarterOne-Regular;\n}\n\n.menu {\n      background: #6d6c6c00; \n  height: 5rem;\n  position:absolute;\n  width: 100%;\n  top: 0;\n  display: block;\n}\n.menu ol {\n  list-style-type: none;\n  margin: 0 auto;\n  padding: 0;\n}\n.menu > ol {\n  max-width: 50%;\n  padding: 0 3rem;\n  display: flex;\n  margin-top: 10px;\n}\n.menu > ol > .menu-item {\n  flex: 1;\n  padding: 0.75rem 0;\n}\n.menu > ol > .menu-item:after {\n  content: \"\";\n  position: absolute;\n  width: 4px;\n  height: 4px;\n  border-radius: 50%;\n  bottom: 5px;\n  left: calc(50% - 2px);\n  background: #4a6d53;\n  will-change: transform;\n  transform: scale(0);\n  transition: transform 0.2s ease;\n}\n.menu > ol > .menu-item:hover:after {\n  transform: scale(1);\n}\n.menu-item {\n  position: relative;\n  line-height: 2.5rem;\n  text-align: center;\n}\n.menu-item a {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  display: block;\n  color: #f9f7f5;\n  font-size: 20px;\n}\n.menu-item a:hover {\n  background: #4a6d53;\n}\n.sub-menu .menu-item {\n  padding: 0.75rem 0;\n  background: #f2eeeab8; \n  opacity: 0;\n  transform-origin: bottom;\n  animation: enter 0.2s ease forwards;\n}\n.sub-menu .menu-item:nth-child(1) {\n  animation-duration: 0.2s;\n  animation-delay: 0s;\n}\n.sub-menu .menu-item:nth-child(2) {\n  animation-duration: 0.3s;\n  animation-delay: 0.1s;\n}\n.sub-menu .menu-item:nth-child(3) {\n  animation-duration: 0.4s;\n  animation-delay: 0.2s;\n}\n\n.sub-menu .menu-item a {\n  padding: 0 0.75rem;\n}\n@media screen and (max-width: 600px) {\n  .sub-menu .menu-item {\n    background: #eeeeee;\n  }\n}\n@media screen and (max-width: 896px) {\n  h1 {\n    font-weight: bold;\n    line-height: 30px;\n    text-align: center;\n    margin-top: 30px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    font-size: 10px;\n    font-family: \"Tapestry\", Regular;\n  }\n}\n\n\n  @media screen and (max-width: 1024px) {\n    .sub-menu .menu-item {\n      background: #eeeeee;\n    }\n    .menu-item{\n      position: relative;\n  line-height: 2.5rem;\n  text-align: center;\n    }\n}\n@media screen and (max-width: 600px) {\n  .menu {\n    position: fixed;\n    top: 0;\n  }\n  main {\n    width: 100%;\n    flex-grow: inherit;\n  }\n  .menu:after {\n    content: \"\";\n    position: absolute;\n    top: calc(50% - 2px);\n    right: 5rem;\n    width: 30px;\n    height: 4px;\n    background: #fff;\n    box-shadow: 0 10px #fff, 0 -10px #fff;\n  }\n  .menu > ol {\n    display: none;\n    background: #222831;\n    flex-direction: column;\n    justify-content: center;\n    height: 100vh;\n    animation: fade 0.2s ease-out;\n  }\n  .menu > ol > .menu-item {\n    flex: 0;\n    opacity: 0;\n    animation: enter 0.3s ease-out forwards;\n  }\n  .menu > ol > .menu-item:nth-child(1) {\n    animation-delay: 0s;\n  }\n  .menu > ol > .menu-item:nth-child(2) {\n    animation-delay: 0.1s;\n  }\n  .menu > ol > .menu-item:nth-child(3) {\n    animation-delay: 0.2s;\n  }\n  .menu > ol > .menu-item:nth-child(4) {\n    animation-delay: 0.3s;\n  }\n  .menu > ol > .menu-item:nth-child(5) {\n    animation-delay: 0.4s;\n  }\n  .menu > ol > .menu-item + .menu-item {\n    margin-top: 0.75rem;\n  }\n  .menu > ol > .menu-item:after {\n    left: auto;\n    right: 1rem;\n    bottom: calc(50% - 2px);\n  }\n  .menu > ol > .menu-item:hover {\n    z-index: 1;\n  }\n  .menu:hover > ol {\n    display: flex;\n  }\n  .menu:hover:after {\n    box-shadow: none;\n  }\n}\n\n.sub-menu {\n  position: absolute;\n  width: 100%;\n  top: 100%;\n  left: 0;\n  display: none;\n  z-index: 1;\n}\n.menu-item:hover > .sub-menu {\n  display: block;\n}\n.center {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n}\n\n@media screen and (max-width: 600px) {\n  .sub-menu {\n    width: 100vw;\n    left: -2rem;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n  \n}\n\nhtml,\nbody {\n  font-size: 16px;\n  font-family: \"roboto\", sans-serif;\n  margin: 0;\n}\n\n* {\n  box-sizing: border-box;\n}\n*:before,\n*:after {\n  box-sizing: inherit;\n}\n\na {\n  text-decoration: none;\n}\n\n@keyframes enter {\n  from {\n    opacity: 0;\n    transform: scaleY(0.98) translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fade {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n","/* Recommended styles for Splitting */\n.splitting .word,\n.splitting .char {\n  display: inline-block;\n}\n\n/* Psuedo-element chars */\n.splitting .char {\n  position: relative;\n}\n\n/**\n * Populate the psuedo elements with the character to allow for expanded effects\n * Set to `display: none` by default; just add `display: block` when you want\n * to use the psuedo elements\n */\n.splitting .char::before,\n.splitting .char::after {\n  content: attr(data-char);\n  position: absolute;\n  top: 0;\n  left: 0;\n  visibility: hidden;\n  transition: inherit;\n  user-select: none;\n}\n\n/* Expanded CSS Variables */\n\n.splitting {\n  /* The center word index */\n  --word-center: calc((var(--word-total) - 1) / 2);\n\n  /* The center character index */\n  --char-center: calc((var(--char-total) - 1) / 2);\n\n  /* The center character index */\n  --line-center: calc((var(--line-total) - 1) / 2);\n}\n\n.splitting .word {\n  /* Pecent (0-1) of the word's position */\n  --word-percent: calc(var(--word-index) / var(--word-total));\n\n  /* Pecent (0-1) of the line's position */\n  --line-percent: calc(var(--line-index) / var(--line-total));\n}\n\n.splitting .char {\n  /* Percent (0-1) of the char's position */\n  --char-percent: calc(var(--char-index) / var(--char-total));\n\n  /* Offset from center, positive & negative */\n  --char-offset: calc(var(--char-index) - var(--char-center));\n\n  /* Absolute distance from center, only positive */\n  --distance: calc(\n     (var(--char-offset) * var(--char-offset)) / var(--char-center)\n  );\n\n  /* Distance from center where -1 is the far left, 0 is center, 1 is far right */\n  --distance-sine: calc(var(--char-offset) / var(--char-center));\n\n  /* Distance from center where 1 is far left/far right, 0 is center */\n  --distance-percent: calc((var(--distance) / var(--char-center)));\n}\n",".splitting.cells img { width: 100%; display: block; }\n\n@supports ( display: grid ) {\n  .splitting.cells {\n    position: relative;\n    overflow: hidden;\n    background-size: cover;\n    visibility: hidden;\n  }\n\n  .splitting .cell-grid {\n    background: inherit;\n    position: absolute;\n    top: 0; \n    left: 0; \n    width: 100%; \n    height: 100%;\n    display: grid;\n    grid-template: repeat( var(--row-total), 1fr ) / repeat( var(--col-total), 1fr );\n  }\n\n  .splitting .cell {\n    background: inherit;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .splitting .cell-inner {\n    background: inherit;\n    position: absolute;\n    visibility: visible;\n    /* Size to fit the whole container size */\n    width: calc(100% * var(--col-total));\n    height: calc(100% * var(--row-total));\n    /* Position properly */\n    left: calc(-100% * var(--col-index));\n    top: calc(-100% * var(--row-index));\n  }\n\n  /* Helper variables for advanced effects */\n  .splitting .cell {\n    --center-x: calc((var(--col-total) - 1) / 2);\n    --center-y: calc((var(--row-total) - 1) / 2);\n\n    /* Offset from center, positive & negative */\n    --offset-x: calc(var(--col-index) - var(--center-x));\n    --offset-y: calc(var(--row-index) - var(--center-y));\n\n    /* Absolute distance from center, only positive */\n    --distance-x: calc( (var(--offset-x) * var(--offset-x)) / var(--center-x) );\n\n    /* Absolute distance from center, only positive */\n    --distance-y: calc( (var(--offset-y) * var(--offset-y)) / var(--center-y) );\n  }\n}\n\n"],"names":[],"version":3,"file":"index.6b541db7.css.map","sourceRoot":"/__parcel_source_root/"}