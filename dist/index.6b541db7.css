@import "https://fonts.google.com/specimen/Carter+One";
body {
  padding-top: 50px;
  font-family: CarterOne-Regular;
}

.menu {
  background: #6d6c6c00;
  width: 100%;
  height: 5rem;
  display: block;
  position: absolute;
  top: 0;
}

.menu ol {
  margin: 0 auto;
  padding: 0;
  list-style-type: none;
}

.menu > ol {
  max-width: 50%;
  margin-top: 10px;
  padding: 0 3rem;
  display: flex;
}

.menu > ol > .menu-item {
  flex: 1;
  padding: .75rem 0;
}

.menu > ol > .menu-item:after {
  content: "";
  will-change: transform;
  background: #4a6d53;
  border-radius: 50%;
  width: 4px;
  height: 4px;
  transition: transform .2s;
  position: absolute;
  bottom: 5px;
  left: calc(50% - 2px);
  transform: scale(0);
}

.menu > ol > .menu-item:hover:after {
  transform: scale(1);
}

.menu-item {
  text-align: center;
  line-height: 2.5rem;
  position: relative;
}

.menu-item a {
  white-space: nowrap;
  text-overflow: ellipsis;
  color: #f9f7f5;
  font-size: 20px;
  display: block;
  overflow: hidden;
}

.menu-item a:hover {
  background: #4a6d53;
}

.sub-menu .menu-item {
  opacity: 0;
  transform-origin: bottom;
  background: #f2eeeab8;
  padding: .75rem 0;
  animation: .2s forwards enter;
}

.sub-menu .menu-item:first-child {
  animation-duration: .2s;
  animation-delay: 0s;
}

.sub-menu .menu-item:nth-child(2) {
  animation-duration: .3s;
  animation-delay: .1s;
}

.sub-menu .menu-item:nth-child(3) {
  animation-duration: .4s;
  animation-delay: .2s;
}

.sub-menu .menu-item a {
  padding: 0 .75rem;
}

@media screen and (width <= 600px) {
  .sub-menu .menu-item {
    background: #eee;
  }
}

@media screen and (width <= 896px) {
  h1 {
    text-align: center;
    margin-top: 30px;
    padding-top: 10px;
    padding-bottom: 10px;
    font-family: Tapestry, Regular;
    font-size: 10px;
    font-weight: bold;
    line-height: 30px;
  }
}

@media screen and (width <= 1024px) {
  .sub-menu .menu-item {
    background: #eee;
  }

  .menu-item {
    text-align: center;
    line-height: 2.5rem;
    position: relative;
  }
}

@media screen and (width <= 600px) {
  .menu {
    position: fixed;
    top: 0;
  }

  main {
    flex-grow: inherit;
    width: 100%;
  }

  .menu:after {
    content: "";
    background: #fff;
    width: 30px;
    height: 4px;
    position: absolute;
    top: calc(50% - 2px);
    right: 5rem;
    box-shadow: 0 10px #fff, 0 -10px #fff;
  }

  .menu > ol {
    background: #222831;
    flex-direction: column;
    justify-content: center;
    height: 100vh;
    animation: .2s ease-out fade;
    display: none;
  }

  .menu > ol > .menu-item {
    opacity: 0;
    flex: 0;
    animation: .3s ease-out forwards enter;
  }

  .menu > ol > .menu-item:first-child {
    animation-delay: 0s;
  }

  .menu > ol > .menu-item:nth-child(2) {
    animation-delay: .1s;
  }

  .menu > ol > .menu-item:nth-child(3) {
    animation-delay: .2s;
  }

  .menu > ol > .menu-item:nth-child(4) {
    animation-delay: .3s;
  }

  .menu > ol > .menu-item:nth-child(5) {
    animation-delay: .4s;
  }

  .menu > ol > .menu-item + .menu-item {
    margin-top: .75rem;
  }

  .menu > ol > .menu-item:after {
    bottom: calc(50% - 2px);
    left: auto;
    right: 1rem;
  }

  .menu > ol > .menu-item:hover {
    z-index: 1;
  }

  .menu:hover > ol {
    display: flex;
  }

  .menu:hover:after {
    box-shadow: none;
  }
}

.sub-menu {
  z-index: 1;
  width: 100%;
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
}

.menu-item:hover > .sub-menu {
  display: block;
}

.center {
  width: 50%;
  margin-left: auto;
  margin-right: auto;
  display: block;
}

@media screen and (width <= 600px) {
  .sub-menu {
    width: 100vw;
    top: 50%;
    left: -2rem;
    transform: translateY(-50%);
  }
}

html, body {
  margin: 0;
  font-family: roboto, sans-serif;
  font-size: 16px;
}

* {
  box-sizing: border-box;
}

:before, :after {
  box-sizing: inherit;
}

a {
  text-decoration: none;
}

@keyframes enter {
  from {
    opacity: 0;
    transform: scaleY(.98)translateY(10px);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

@keyframes fade {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.splitting .word, .splitting .char {
  display: inline-block;
}

.splitting .char {
  position: relative;
}

.splitting .char:before, .splitting .char:after {
  content: attr(data-char);
  visibility: hidden;
  -webkit-user-select: none;
  user-select: none;
  transition: inherit;
  position: absolute;
  top: 0;
  left: 0;
}

.splitting {
  --word-center: calc((var(--word-total)  - 1) / 2);
  --char-center: calc((var(--char-total)  - 1) / 2);
  --line-center: calc((var(--line-total)  - 1) / 2);
}

.splitting .word {
  --word-percent: calc(var(--word-index) / var(--word-total));
  --line-percent: calc(var(--line-index) / var(--line-total));
}

.splitting .char {
  --char-percent: calc(var(--char-index) / var(--char-total));
  --char-offset: calc(var(--char-index)  - var(--char-center));
  --distance: calc((var(--char-offset) * var(--char-offset)) / var(--char-center));
  --distance-sine: calc(var(--char-offset) / var(--char-center));
  --distance-percent: calc((var(--distance) / var(--char-center)));
}

.splitting.cells img {
  width: 100%;
  display: block;
}

@supports (display: grid ) {
  .splitting.cells {
    visibility: hidden;
    background-size: cover;
    position: relative;
    overflow: hidden;
  }

  .splitting .cell-grid {
    background: inherit;
    grid-template: repeat(var(--row-total), 1fr) / repeat(var(--col-total), 1fr);
    width: 100%;
    height: 100%;
    display: grid;
    position: absolute;
    top: 0;
    left: 0;
  }

  .splitting .cell {
    background: inherit;
    position: relative;
    overflow: hidden;
  }

  .splitting .cell-inner {
    background: inherit;
    visibility: visible;
    width: calc(100% * var(--col-total));
    height: calc(100% * var(--row-total));
    left: calc(-100% * var(--col-index));
    top: calc(-100% * var(--row-index));
    position: absolute;
  }

  .splitting .cell {
    --center-x: calc((var(--col-total)  - 1) / 2);
    --center-y: calc((var(--row-total)  - 1) / 2);
    --offset-x: calc(var(--col-index)  - var(--center-x));
    --offset-y: calc(var(--row-index)  - var(--center-y));
    --distance-x: calc((var(--offset-x) * var(--offset-x)) / var(--center-x));
    --distance-y: calc((var(--offset-y) * var(--offset-y)) / var(--center-y));
  }
}

/*# sourceMappingURL=index.6b541db7.css.map */
