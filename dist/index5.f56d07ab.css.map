{"mappings":"AAAA;;;;AAMA;;;;;;;;;;;;;;;;AAeA;;;;;;;;AASA;;;;;;;;;;;AAYA;;;;;;;AAOA;;;;;;AAMA;;;;;AAKA;;;;;;;;;AASA;;;;;;;;;;;AAWA;;;;AAIA;;;;;;;;;AASA;;;;AAKA;;;;;;;;;;AAUA;;;;;;;;AAUA;;;;;;AAOA;;;;;;;;AAQA;;;;;;;;;;;;AAaA;;;;;;;AAOA;;;;;;;AAOA;;;;;AAMA;;;;;AAOA;;;;AAMA;;;;;AAQA;;;;;;;;;AASA;;;;AAIA;;;;;;;;;;;;;;;;AAcA;;;;AAIA;;;;;;;AAOA;;;;;AAKA;;;;;AAKA;;;;;;;;;AASA;;;;;;;;;;AAWA;;;;AAGA;;;;;;;AAOA;;;;;;;;;;;AAWA;;;;;;;;;AASA;;;;;;AAMA;;;;;;;;;AASA;;;;;;;;;;;AAUA;;;;;;;;;;AASC;;;;AAGD;EACC;;;;;EAIA;;;;;ACtUD;;;;AAMA;;;;AASA;;;;;;;;;;;AAaA;;;;;;AAWA;;;;;AAQA;;;;;;;;AChDA;;;;;AAEA;EACE;;;;;;;EAOA;;;;;;;;;;;EAWA;;;;;;EAMA;;;;;;;;;;EAaA","sources":["src/css/base2.css","node_modules/splitting/dist/splitting.css","node_modules/splitting/dist/splitting-cells.css"],"sourcesContent":["*,\n*::after,\n*::before {\n\tbox-sizing: border-box;\n}\n\n:root {\n\tfont-size: 18px;\n\t--color-text: #fff;\n\t--color-bg: #000;\n\t--color-link: #fff;\n\t--color-link-hover: #a2a2a2;\n\t--perspective: 0px;\n\t--grid-item-translate: 0px;\n\t--grid-item-ratio: 0.75;\n\t--grid-item-radius: 7px;\n\t--grid-gap: 4vw;\n\t--grid-columns: 3;\n\t--grid-width: 100%;\n\t--grid-max-width: 1200px;\n}\n.demo-5 {\n\t--grid-item-ratio: 0.7;\n\t--grid-item-radius: 0px;\n\t--grid-gap: 10px;\n\t--grid-columns: 4;\n\t--grid-max-width: 900px;\n    \n}\n\nbody {\n\tmargin: 0;\n\tcolor: var(--color-text);\n\tbackground-color: var(--color-bg);\n    \n\tfont-family: \"marlide-display-variable\", sans-serif;\n\tfont-variation-settings: \"wght\" 300;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\toverflow-x: hidden;\n}\n\nsection {\n\tdisplay: grid;\n\tplace-items: center;\n\twidth: 100%;\n\tposition: relative;\n}\n\n.outro {\n\tdisplay: grid;\n\tplace-items: center;\n\tmargin: 40vh 0;\n}\n\n.outro__title {\n\tfont-weight: 300;\n\tfont-size: clamp(1.5rem,10vw,2rem);\n}\n\n.card-wrap {\n\tmargin-top: 5vh;\n\tdisplay: grid;\n\tgrid-gap: 2rem;\n\tgrid-auto-flow: row;\n\tgrid-template-columns: 250px;\n\ttext-align: center;\n}\n\n.card__image {\n\tdisplay: block;\n\tborder-radius: 7px;\n\tbackground-size: cover;\n\tbackground-position: 50% 50%;\n\twidth: 100%;\n\theight: auto;\n\taspect-ratio: 4 / 3;\n\tfilter: contrast(0.8);\n}\n\n.card__title {\n\tfont-weight: 300;\n}\n\n.content__title {\n\tfont-size: 10vw;\n\tline-height: 0.8;\n\tcounter-increment: section;\n\ttext-align: center;\n\tdisplay: grid;\n\tgap: 2rem;\n}\n\n.content__title--left {\n\ttext-align: center;\n\t\n}\n\n.content__title::before {\n\tcontent: '';\n\tfont-weight: 300;\n\tfont-family: area-normal, sans-serif;\n\tdisplay: block;\n\tfont-size: 1rem;\n\tmargin-bottom: 5vh;\n\ttext-align: center;\n}\n\n.content__title--sides {\n\tdisplay: grid;\n\tgrid-template-rows: auto auto;\n\tgrid-template-columns: 100%;\n\ttext-align: center;\n\tgap: 1rem;\n}\n\n\n/* Page Loader */\n.js .loading::before,\n.js .loading::after {\n\tcontent: '';\n\tposition: fixed;\n\tz-index: 4000;\n}\n\n.js .loading::before {\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: var(--color-bg);\n}\n\n.js .loading::after {\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 60px;\n\theight: 60px;\n\tmargin: -30px 0 0 -30px;\n\tborder-radius: 50%;\n\topacity: 0.4;\n\tbackground: var(--color-link);\n\tanimation: loaderAnim 0.7s linear infinite alternate forwards;\n\n}\n\n@keyframes loaderAnim {\n\tto {\n\t\topacity: 1;\n\t\ttransform: scale3d(0.5,0.5,1);\n\t}\n}\n\na {\n\ttext-decoration: none;\n\tcolor: var(--color-link);\n\toutline: none;\n\tcursor: pointer;\n}\n\na:hover {\n\tcolor: var(--color-link-hover);\n\toutline: none;\n}\n\n/* Better focus styles from https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible */\na:not(.card__image):focus {\n\t/* Provide a fallback style for browsers\n\t that don't support :focus-visible */\n\toutline: none;\n\tbackground: lightgrey;\n}\n\na:not(.card__image):focus:not(:focus-visible) {\n\t/* Remove the focus indicator on mouse-focus for browsers\n\t that do support :focus-visible */\n\tbackground: transparent;\n}\n\na:not(.card__image):focus-visible {\n\t/* Draw a very noticeable focus style for\n\t keyboard-focus on browsers that do support\n\t :focus-visible */\n\toutline: 2px solid red;\n\tbackground: transparent;\n}\n\n.unbutton {\n\tbackground: none;\n\tborder: 0;\n\tpadding: 0;\n\tmargin: 0;\n\tfont: inherit;\n\tcursor: pointer;\n}\n\n.unbutton:focus {\n\toutline: none;\n}\n\n.frame {\n\tz-index: 1000;\n\tposition: relative;\n\tpadding: 1.5rem;\n\tdisplay: grid;\n\tmin-height: 400px;\n\twidth: 100%;\n\tgrid-template-columns: auto auto 1fr 1fr;\n\tgrid-template-areas: 'prev back ... sponsor' 'title title title title' 'demos demos demos demos' ;\n\tgrid-gap: 1rem;\n\tpointer-events: none;\n\tjustify-items: start;\n}\n\n.frame a {\n\tpointer-events: auto;\n}\n\n.frame__title {\n\tgrid-area: title;\n\tfont-size: clamp(1.5rem, 10vw,5rem);\n\tmargin: 0;\n\tfont-weight: inherit;\n}\n\n.frame__back {\n\tgrid-area: back;\n\tjustify-self: start;\n}\n\n.frame__prev {\n\tgrid-area: prev;\n\tjustify-self: start;\n}\n\n.frame__demos {\n\tgrid-area: demos;\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 0.5rem;\n\talign-self: start;\n\tflex-wrap: wrap;\n}\n\n.frame__demos-item:not(:first-child) {\n\twidth: 2rem;\n\tdisplay: block;\n\tflex: none;\n\tborder-radius: 10px;\n\taspect-ratio: 1;\n\tborder: 1px solid var(--color-link-hover);\n\tdisplay: grid;\n\tplace-items: center;\n}\n\nspan.frame__demos-item:not(:first-child) {\n\tborder-color: #fff;\n}\n.headings{\n\ttext-align: center;\n\tfont-family: wayfinder-cf, serif;\n\tfont-weight: 100;\n\tfont-size: 50px;\n}\n\n.columns {\n\twidth: var(--grid-width);\n\tmax-width: var(--grid-max-width);\n\tposition: relative;\n\tpadding: 10vh 0;\n\tdisplay: grid;\n\tplace-items: center;\n    grid-template-columns: repeat(var(--grid-columns),1fr);\n    gap: var(--grid-gap);\n}\n\n.column {\n\twidth: 100%;\n\tposition: relative;\n\tdisplay: grid;\n\tgap: var(--grid-gap);\n\tgrid-template-columns: 100%;\n\twill-change: transform;\n}\n\n.column__item {\n\tmargin: 0;\n\tposition: relative;\n\tz-index: 1;\n}\n\n.column__item-imgwrap {\n\twidth: 100%;\n\taspect-ratio: var(--grid-item-ratio);\n\theight: auto;\n\tposition: relative;\n\toverflow: hidden;\n\tborder-radius: var(--grid-item-radius);\n}\n\n.column__item-img {\n\tposition: absolute;\n\ttop: calc(-1 * var(--grid-item-translate));\n\tleft: calc(-1 * var(--grid-item-translate));\n\theight: calc(100% + var(--grid-item-translate) * 2);\n\twidth: calc(100% + var(--grid-item-translate) * 2);\n\tbackground-size: cover;\n\tbackground-position: 50% 20%;\n\tbackface-visibility: hidden;\n}\n.card-content {\n\tdisplay: none;\n\tposition: absolute;\n\tbottom: 0;\n\tbackground-color: rgba(0, 0, 0, 0.5);\n\tcolor: #fff;\n\twidth: 100%;\n\tpadding: 10px;\n}\n .card-content:hover {\n\tdisplay: block;\n}\n@media screen and (min-width: 53em) {\n\t.frame {\n\t\ttext-align: center; \n\t\tjustify-items: center;\n\t}\n\t.card-wrap {\n\t\tgrid-template-columns: repeat(2,300px);\n\t}\n\n}","/* Recommended styles for Splitting */\n.splitting .word,\n.splitting .char {\n  display: inline-block;\n}\n\n/* Psuedo-element chars */\n.splitting .char {\n  position: relative;\n}\n\n/**\n * Populate the psuedo elements with the character to allow for expanded effects\n * Set to `display: none` by default; just add `display: block` when you want\n * to use the psuedo elements\n */\n.splitting .char::before,\n.splitting .char::after {\n  content: attr(data-char);\n  position: absolute;\n  top: 0;\n  left: 0;\n  visibility: hidden;\n  transition: inherit;\n  user-select: none;\n}\n\n/* Expanded CSS Variables */\n\n.splitting {\n  /* The center word index */\n  --word-center: calc((var(--word-total) - 1) / 2);\n\n  /* The center character index */\n  --char-center: calc((var(--char-total) - 1) / 2);\n\n  /* The center character index */\n  --line-center: calc((var(--line-total) - 1) / 2);\n}\n\n.splitting .word {\n  /* Pecent (0-1) of the word's position */\n  --word-percent: calc(var(--word-index) / var(--word-total));\n\n  /* Pecent (0-1) of the line's position */\n  --line-percent: calc(var(--line-index) / var(--line-total));\n}\n\n.splitting .char {\n  /* Percent (0-1) of the char's position */\n  --char-percent: calc(var(--char-index) / var(--char-total));\n\n  /* Offset from center, positive & negative */\n  --char-offset: calc(var(--char-index) - var(--char-center));\n\n  /* Absolute distance from center, only positive */\n  --distance: calc(\n     (var(--char-offset) * var(--char-offset)) / var(--char-center)\n  );\n\n  /* Distance from center where -1 is the far left, 0 is center, 1 is far right */\n  --distance-sine: calc(var(--char-offset) / var(--char-center));\n\n  /* Distance from center where 1 is far left/far right, 0 is center */\n  --distance-percent: calc((var(--distance) / var(--char-center)));\n}\n",".splitting.cells img { width: 100%; display: block; }\n\n@supports ( display: grid ) {\n  .splitting.cells {\n    position: relative;\n    overflow: hidden;\n    background-size: cover;\n    visibility: hidden;\n  }\n\n  .splitting .cell-grid {\n    background: inherit;\n    position: absolute;\n    top: 0; \n    left: 0; \n    width: 100%; \n    height: 100%;\n    display: grid;\n    grid-template: repeat( var(--row-total), 1fr ) / repeat( var(--col-total), 1fr );\n  }\n\n  .splitting .cell {\n    background: inherit;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .splitting .cell-inner {\n    background: inherit;\n    position: absolute;\n    visibility: visible;\n    /* Size to fit the whole container size */\n    width: calc(100% * var(--col-total));\n    height: calc(100% * var(--row-total));\n    /* Position properly */\n    left: calc(-100% * var(--col-index));\n    top: calc(-100% * var(--row-index));\n  }\n\n  /* Helper variables for advanced effects */\n  .splitting .cell {\n    --center-x: calc((var(--col-total) - 1) / 2);\n    --center-y: calc((var(--row-total) - 1) / 2);\n\n    /* Offset from center, positive & negative */\n    --offset-x: calc(var(--col-index) - var(--center-x));\n    --offset-y: calc(var(--row-index) - var(--center-y));\n\n    /* Absolute distance from center, only positive */\n    --distance-x: calc( (var(--offset-x) * var(--offset-x)) / var(--center-x) );\n\n    /* Absolute distance from center, only positive */\n    --distance-y: calc( (var(--offset-y) * var(--offset-y)) / var(--center-y) );\n  }\n}\n\n"],"names":[],"version":3,"file":"index5.f56d07ab.css.map","sourceRoot":"/__parcel_source_root/"}